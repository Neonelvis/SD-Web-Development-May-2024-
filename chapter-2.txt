Chapter 2 :HTML basics

Introduction to HTML 

HTML is the standard markup language used to structure and define the content of web pages. 
It provides a way to organize and present information on the world wide web using a set of elements, tags and attributes. 

HTMl is a markup language, which means it uses a system of tags or elements to annotate and structure the content of a web page.
Unlike programming languages like JavaScript or Python, HTML does not have the ability to perform complex calculations or logic. Instead, it focuses on providing the structural foundation for web content and defining the sematic or meaning of different parts of a web page. 


Brief History of HTML 
HTML was originally conceived by sir Berners-Lee, a computer scientist at CERN, as a way to share and link documents among researchers.
The initial version of HTML, was simple, with only a few tags for making up headers, paragraphs and links. 

Over the years, HTML has evolved through several versions, each introducing new elements, attributes, and capabilities. 
The current version is HTML5, which was officially released in 2014 by the World Wide Web Consortium (W3C) 
HTML5 brought significant improvements, including better support for multimedia, offline capabilities, and semantic elements that enhance accessibility and search engine optimisation (SEO) 

HTML Document Structure 
Every HTML document follows a basic structure, which includes the following essential elements: 

1. <!DOCTYPE html>: This declaration, placed at the beginning of the document, tells the web browser which version of HTML the page is using 

2. <html>: This is the root element of an HTML document, containing all the other elements. 

3. <head>: This element contains the metadata about the web page, such as the title, character encoding, and external resources (e.g CSS stylesheets, JavaScript files) 

4. <title>: The title of the web page displayed in the browser's title bar or tab 

5. <body>: This element contains the visible cxontent of the web page, including text, images, links. and other elements. 


Here is an example of a basic HTML document structure




HTML ELEMENTS AND TAGS 

Definiton of HTML elements and tags 
-> An HTML element represents a specific component or type of content on a web page. 
-> HTMl tags are used to define and structure these elements.
-> Tags are enclosed in angle brackets (e.g <tag>content</tag>) 
-> Elements can have attributes that provide additional information or instructions. 

Opening and Closing Tags 
-> Most HTMl elements have an openiing tag (<tag>) and a closing tag (</tag>) 
-> The content of the element is placed between the opening and closing tags. 
-> Some elements are self-closing and do not require a closing tag (e.g <br/>, <img/>, <hr/>)

Nested tags and proper nesting 
-> HTMl elements can be nested inside other elments, creating a hierarchical structure. 
-> Proper nesting is essential for maintaining the logical structure of the document and ensuring correct rendering by web browsers.
-> Child elements must be fully contained withing their parent element's opening and closing tags. 
-> Nesting levels should be indented for better readability and maintainability of the code. 

HTML elements for structuring content
-> Heading : <h1>, <h2>, <h3>, <h4>, <h5>, <h6> for different heading levels 
-> Paragraphs: <p> for creating paragraph of text 
-> Lists: <ul> (unordered), and <ol> (ordered) for creating lists, with <li> for list items. 
-> Divisions: <div> for creating logical divisions or sections of content. 


HTML ATTRIBUTES 

Definition of HTML Attributes 

-> Attributes provide additional information or instruction for HTML elements 
-> Attrributes are specified within the opening of an element, following the element name 

Common attributes 
-> id: Uniquely identifying an element on a web page (used for styling, scripting and linking) 
-> class: Applies a specific style or behaviour to an elment or group of elements (used for styling and scripting) 
-> style: inline CSS styles applied directly to the element 
-> src: Specifies the source location (URL) for external resources like images, multimedial, and scripts. 
-> href: Defines the destination URL for links 
-> alt: Provides alternative texts for images, essential for accessibility. 
-> title: Provides additional tooltips or information about an element 
-> target: specifies where to open a linked document (e.g _blank for a new window or tab) 

Attribute values and their formatting 
-> Attribute values must be enclosed in quotation marks (single or double) 
-> Values can be text, URL, or predefines values specific to the attributes
-> Some attributes accept multiple values separated by spaces or specific delimiters 


HTML Document Structure cont... (in detail) 

1. Doctype declaration 
-> The doctype declaration is the first line of an HTML document and specifies the version of the HTML used 
-> Example: <!DOCTYPE html> 
-> It helps web browsers correctly render and interpret the HTML code. 

2. <html> element and its children 
-> The <html> element is the root element of the HTML document 
-> It contains two main sections: <head> and <body> 

3. <head> element
-> The <head> element contains metadata about the web page, such as the title, character encoding, and links to external resources (stylesheets or scripts) 
-> common elements inside <head> 
    a. <title>: Defines the title of the web page, displayed in the browsers title bar or tab

    b. <meta>: Provides metadata about the web page, such as character encoding, description, keywords, and viewport settings. 

    c. <link>: Used to link external resources like CSS stylesheets to the web page 
    
    d. <style>: Allows for embedding internal CSS styles within the HTML document 

    e. <script>: Used for embedding or linking external JavaScript files for adding interactivity. 

4. <body> element 
-> The <body> element contains the visible content of the web page. 
-> All structural and semantic elements (headings, paragraphs, images, links, etc) are placed within the body section. 
-> Content within the <body> is rendered and displayed in the browser window. 

Challenge Time: 
-> Create a basic HTML document with a properly structured <head> and <body> sections 
-> Inside the <head> section, include a title, meta tags for character encoding and viewport, and links to external stylesheets and scripts. 
-> Within the <body> section, create a simple page layout with various elements, such as headings (<h1>, <h2>, <h3>, etc), paragraphs (<p>), links <a>, images <img/>, and lists (<ul> or <ol>)
-> Apply different attributes to the elements, such as id, class, style, src, href, alt, title, and target. 
-> ensure proper nesting and hierarchy of elements 
-> Include comments in the HTMl code to explain the purpose of different sections 