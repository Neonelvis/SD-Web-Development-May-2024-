Chapter 1 - Websites 

Introduction to Websites and the World Wide Website 

The World Wide Web, often abbreviated as WWW or simply the web, is a vast collection of interconnected documents and resources accesible via the internet. 
It is a global information system that allows users to access, share and exchange information from anywhere in the world.

The web was initially conceived in 1989 by Sir Tim Berners-Lee, a computer scientist at CERN (The European Organisation for Nuclear Research) as a way to share and link information among researchers.

Berners-Lee developed the foundational technologies that make the web possible, including Hypertext Transfer Protocal(HTTP), Uniform Resource Identifies(URIs) and Hypertext Markup Language(HTML) 

Today, the World Wide Web has evolved into a ubiquitous platform that permeates virtually every aspect of our lives. It serves as a vast repository of information, a platform for communication, and collaboration, a marketplace for goods and services, and a medium for entertainment and social interaction. 


How the web works: Key Terms and Definition 

To understand how the world wide web functions, its essential to comprehend the following key terms and concepts 

1. Client-Server Architecture
The web follows a client-server architecture, where clients (typically web servers) initiate requests, and servers respond to those requests.The architecture allows for efficient communication and resource sharing between devices on the internet.

2. Hypertext Transfer Protocal(HTTP): 
HTTP is the foundation of data communication on the web.
It is a protocal that defines the rules and standards for transmitting data between web browsers (clients) and web servers. 
HTTP goberns how requests are made, how srevers respond, and how data is transfered. 

3. Uniform Resource Locator (URL) 
A URL is the address used to locate and access a specific resource on the web. 
It specifies the protocal (e.g HTTP or HTTPS), the domain name or IP address of the web server, and the path to the requested resource. 

4. Domain Name System (DNS) 
The DNS is hierachical and decentralized naming system that translates human-readable domain names (e.g example.com) into numerical IP address that computers understand. 
This system allows users to access websites using memorable domain names instead of IP addresses. 

5. Web Server 
A web server is a computer program or software that handles requests from clients and delivers web content (HTML, CSS, JavaScript, Images, etc) in response.
Popular web server software include Apache, and Nginx 

6. Web Browser 
A web browser is a software application that runs on a client device, (e.g desktop computer, laptop, smartphone or tablet) and is used to access and display web content. 
Web browsers intepret HTML, CSS, and JavaScript to render web pages and provide a user interface for interacting with the web 

6. Hypertext Markup Language (HTML): 
HTML is the standard markup language used to structure and define the content of the web pages. 
It provides a way to organise and present information using various elements, such as headings, paragraphs, lists, links and multimedia.

7. Cascading Style Sheets (CSS): 
CSS is a style sheet language used to control the visual presentaion of HTML elements on the web page. 
It allows developers to define styles for elements, including layout, colors, fonts, and other design aspects. 

8. JavaScript
JavaScript is a programming language used to add interactivity and dynamic behaviour to web pages. 
It enables features such as drop-down menus, form validation, animations, real-time updates, and interactive visualizations. 

Here is an example of how these components work together when a user requests a web page. 

-> The user enters a URL (e.g https://www.example.com/about) into their web browsers. 

-> The browser initiates a HTTP request to the web server specified in the URL 

-> The DNS system translates the domain name (e.g example.com) into an IP address that the browser can use to locate the web server. 

-> The web server receives the HTTP request and processes it. 

-> If the requested resource (e.g /about) exists, the web server retrieves the corresponding field (HTML, CSS, JavaScript, Images, etc) and send them back to the browser in an HTTP response. 

-> The browser recieves the HTTP response and renders the web page by interprating the HTML, CSs and JavaScript code, displaying the content to the user. 

-> This process illustrates the client-server architecture and the various components involved in retrieving and rendering web content on the world wide web. 


Components of a Website(HTMl, CSS and JavaScript)

A website is a collection of interconnected web pages, images, videos and other digital assets hosted on a web server and accessible through a unique URL (Uniform Resource Locator). 
Websites are built using three core technologies: 

1. HTML (Hypertext Markup Language)
HTML is a standard markup language used to structure and define the content of web pages. 
It provides a way to organise and present information using various elements such as headings, paragraphs, lists, links, and multimedia. 
HTMl forms the backbone of every website, defining the structure and semantics of the content. 

2. CSS ( Cascading Style Sheets):
CSS is a style sheet language used to control visual presentation of HTML elements on a web page. 
It allows developers to define styles for elements, including layout, colors, fonts and other design aspects. 
CSS separates the presentation from the content, enabling consistent, and maintanable styling across multiple web pages. 

3. JavaScript 
JavaScript is a versatile programming language that adds interactivity and dynamic behaviour to web pages. 
It enables features such as drop-down menus, form validations, animations, real-time updates, and interactive visualisations. 
JavaScript can also be used to communicate with web servers, retrieve and manipulate data, and enhance the overall user experience. 

While HTML provides the structure and content, CSS handles the visual styling, JavaScript adds functionality and interactivity to websites creating a rich and engaging user experience. 


Web Servers and Browsers 
To access websites, users need a web browser, which is a software application designed to retrieve, present and navigate information on the world wide web. 
Web Browsers act as clients, sending requests to web servers and rendering the received content for users to view and interact with. 
Popular web browsers include google chrome, Mozilla FireFox, Microsoft Edge, Apple Safari, and Opera. 
Each browser has its rendering engine and may interpret and display web content slightly differently, which is why web developers often test their websites across multiple browsers to ensure consistent behaviour. 

Web Servers, on the other hand, are computer systems that store web pages and other web content to clients (web browsers) over the internet. 
When a user requests a web page by entering a URL in their browser, the browser sends a request to the corresponding web server, which retrieves the requested gilrd, (HTML, CSS, JavaScript, Images, etc) and transmits them back to the browser, for rendering and display. 


URL Structure and Domain names
A URL is the address used to locate and access a specific resource on the world wide web.
URLs typically consists of several components: 

https://www.example.com/path/to/resource?query=string#fragment 

Scheme -> The protocal used to access the resource, such as http:// or https://(for secure connections) 

Host -> The domain name or IP address of the web server hosting the website (e.g example.com) 

Path -> the folder structure and file name of the requested resource on the server (e.g /path/to/resource) 

Query -> Optional Parameters or data passed to the server for processing (e.g ?query = string) 

Fragment -> is an internal reference within the resource, used for linking to specific sections or elements (e.g #fragment) 


Web Hosting and Publishing Websites

To make a website available on the internet, it needs to be hosted on a web server. 
Web hosting services provide the necessary infrastructure and resources to store and server websites files to users worldwide. 

There are various types of web hosting options available, each with its own advantages and limitations: 

1. Shared Hosting: In shared hosting, multiple websites are hosted on a single server, sharing its resources (CPU, RAM, Disk space, etc). This is cost-effective option for small to medium-sized with moderate traffic. 

2. Virtual Private Server (VPS): A VPS is a virtualized environment that provides dedicated resources (CPU, RAM, disk-space) within a shared server. 
This option offers more control and flexibility than the shared hosting and is suitable for websites with higher traffic and resource requirments. 

3. Dedicated Server Hosting: With a dedicated server, the entire physical server is dedicated to a single client, providing maximum control and performance, and security. 
This option is typically more expensive and suitable for high-traffic websites or approaches with strict security 

4. Cloud Hosting: Cloud Hosting utilises a network of virtual machines and resources that can dynamically scale up or down based on the website's demands. 
This option offers flexibility, scalability and high availability, making it suitable for websites with fluctuating or unpredictable traffic patterns 


Once a website is developed and ready for publishing the files (HTML, CSS, JavaScript, Images, etc) are uploaded to the web server provided by the hosting service. 
This process is known as publishing or deploying a website, making it accessible to anyone with an internet connection and the corresponding URL. 

Web Standards and Best Practices 
As the web continues to evolve, it is essential to follow web standards and best practices to ensure that websites are accessible, usable, and maintainable. 
Some key principles and guidlines include: 

1. Accessibility: Designing websites that are accessible to users with disabilities, following guidelines like the Web Content Accessibility Guidelines (WCAG) 

2. Responsive Design: Creating websites that adapt and provide an optional viewing experience across different devices and screen sizes. 

3. Search Engine Optimizations: Optimizing websites for better visibility and ranking in search engines results. 

4. Performace Optimization: Implementing techniques to improve website load times, such as minifying code, compressing assets, and leveraging caching mechanism. 

5. Security: Implementing security measures to protect websites and user data from potential threats, such as Cross-Site-Scripting (XSS) and SQL Injection attacks 

6. Usability and User Experience: Designing websites with a focus on intuitive navigation, clear information architecture, and a seamless user experience. 

7. Code Best Practices: Following coding conventions, writing clean code and maintenable code, and adhering to web development best practices 


Web Development Roles and Responsibilites 

Building and maintaining websites often involves a team of professionals with different roles and responsibilities, including: 

1. Web Developers: Responsible for writing code (HTML, CSS, JavaScript) that powers the website's structure, functionality and interactivity. They may specialize in front-end development (client-side) or back-end development (server-side)

2. Web Designers: Focus on the visual aspects of a website, including layout, color schemes, typography, and user interface design. They create mockups, wireframes, and design prototypes. 

3. User Experience (UX) Designers: Conduct user research, create user personas, and design user flow to ensure the website provides an intuitive and satisfying experience for visitors. 

4. Content Creators and Copy Writers: responsible for generating and curating the textual multimedia content that appears on a website. 

5. Project Managers: Oversee the entire web development process, coordinating between different teams, setting timelines, and ensuring the project stays on track. 

6. Quality Assurance (QA) Testers: Verify the functionality, usability, and performance of the website across different browsers, devices and scenarios. 

7. System Administrators: Manage the web servers, hosting environments, and infrastructure required to host and deploy the website. 

Next Chapter 2 